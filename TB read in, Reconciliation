DM LOG 'CLEAR' LOG;
OPTIONS MPRINT MLOGIC SYMBOLGEN LINESIZE=256 YEARCUTOFF=1976 NOCENTER NOLABEL;

/****************************************************************************
*   CREATED BY: 
*   CREATED ON: 
*   
*   PROGRAM DESCRIPTION:
*   READS THE TRIAL BALANCE AND PERFORMS A RECONCILIATION OF THE JE-TB DATA.
*	PREPARES THE CHART OF ACCOUNT IN CASE NOT PROVIDED BY THE CLIENT
****************************************************************************/

*@@@ SET GLOBAL PARAMETERS @@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@;

%LET CLIENT = CLIENTNAME;
%LET WIN_PATH =G:\Client folder path;
%LET AIX_PATH = \\abc\abc\nc_reg\client abc folder path;

*@@@ CREATE PERMANENT SAS LIBRARIES @@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@;
LIBNAME AIXDATA "&AIX_PATH.\SASDATA";

*IMPORT THE TB RAW FILES;

/* OPEN FOR TB IMPORT, APPEND, AND/OR CLEAN UP CODE */

*SUMMARIZING THE TB BY ACCOUNT FOR RECONCILIATION;

PROC SUMMARY DATA=TB_ALL NWAY;
CLASS ACCOUNT;
ID ACCT_DESCR;
VAR END_BALANCE BEGIN_BALANCE;
OUTPUT OUT=AIXDATA.&CLIENT._TB(DROP=_TYPE_ _FREQ_) SUM=;
RUN;

*RECONCILIATION;
DATA RECON(RENAME=AMOUNT=JE_ACTIVITY);
	LENGTH FOUND_IN $7. STATUS $15.;
	MERGE SASDATA.JE_SUM(IN=A) AIXDATA.&CLIENT._TB(IN=B);
	BY ACCOUNT;
	IF JE_COUNT=. THEN JE_COUNT=0;
	AMOUNT=COALESCE(AMOUNT,0);
	DEBIT_AMT=COALESCE(DEBIT_AMT,0);
	CREDIT_AMT=COALESCE(CREDIT_AMT,0);
	END_BALANCE=COALESCE(END_BALANCE,0);
	BEGIN_BALANCE=COALESCE(BEGIN_BALANCE,0);

	*UPDATE THE BS-IS LOGIC AND THE TB ACTIVITY DEFINITION ACCORDINGLY;
	
	IF SUBSTR(COMPRESS(ACCOUNT,1,1)) IN ("1" "2" "3" "4" "5") THEN B_ACTIVITY=SUM(END_BALANCE,-BEGIN_BALANCE);
	ELSE TB_ACTIVITY=END_BALANCE;

	TB_ACTIVITY=COALESCE(TB_ACTIVITY,0);
	DIFFERENCE=SUM(AMOUNT,-TB_ACTIVITY);
	ABS_DIFF=ABS(DIFFERENCE);
	FORMAT AMOUNT DIFFERENCE 32.2;

	IF A AND B THEN FOUND_IN='BOTH';
	ELSE IF A AND NOT B THEN FOUND_IN='JE_ONLY';
	ELSE IF B AND NOT A THEN FOUND_IN='TB_ONLY';
	IF ROUND(ABS_DIFF,0.01) GT 1 THEN STATUS='OUT_OF_BALANCE';
	ELSE STATUS='IN_BALANCE';
RUN;

PROC SORT DATA=RECON; BY DESCENDING ABS_DIFF; RUN;

DATA UNREC REC;
SET RECON;
IF ABS_DIFF GT 1 THEN OUTPUT UNREC;
ELSE OUTPUT REC;
RUN;

DATA AIXDATA.RECON(DROP=ABS_DIFF);
RETAIN FOUND_IN STATUS ACCOUNT ACCT_DESCR JE_COUNT END_BALANCE BEGIN_BALANCE TB_ACTIVITY JE_ACTIVITY DEBIT_AMT CREDIT_AMT DIFFERENCE ;
SET RECON;
FORMAT DEBIT_AMT CREDIT_AMT JE_ACTIVITY DIFFERENCE 32.2;
RUN;

PROC EXPORT DATA=AIXDATA.RECON
OUTFILE="&PATH.\OUTPUT\&CLIENT. RECONCILIATION REPORT.xls"
DBMS=EXCEL REPLACE;
SHEET="RECONCILIATION REPORT";
RUN;

*USE THE FOLLOWING CODE IN CASE MULTIPLE COMPANY CODES ARE TO BE RECONCILED SEPARATELY;

*SUMMARIZING THE TB BY ACCOUNT AND COMPANY CODE FOR RECONCILIATION;

PROC SUMMARY DATA=TB_ALL NWAY;
CLASS COMPANY ACCOUNT;
ID ACCT_DESCR;
VAR END_BALANCE BEGIN_BALANCE;
OUTPUT OUT=AIXDATA.&CLIENT._TB_BY_COMP(DROP=_TYPE_ _FREQ_) SUM=;
RUN;

%MACRO ENTITYWISE_RECON(ENTITY);

*RECONCILIATION;

DATA JE_SUM_COMP;
SET AIXDATA.JE_SUM_BY_COMP;
IF COMPANY="&ENTITY.";
RUN;

DATA TB_SUM_COMP;
SET AIXDATA.&CLIENT._TB_BY_COMP;
IF COMPANY="&ENTITY.";
RUN;

DATA RECON_&ENTITY.(RENAME=AMOUNT=JE_ACTIVITY);
	LENGTH FOUND_IN $7. STATUS $15.;
	MERGE JE_SUM_COMP(IN=A) TB_SUM_COMP(IN=B);
	BY COMPANY ACCOUNT;
	IF JE_COUNT=. THEN JE_COUNT=0;
	AMOUNT=COALESCE(AMOUNT,0);
	DEBIT_AMT=COALESCE(DEBIT_AMT,0);
	CREDIT_AMT=COALESCE(CREDIT_AMT,0);
	END_BALANCE=COALESCE(END_BALANCE,0);
	BEGIN_BALANCE=COALESCE(BEGIN_BALANCE,0);

	*UPDATE THE BS-IS LOGIC AND THE TB ACTIVITY DEFINITION ACCORDINGLY;
	
	IF SUBSTR(COMPRESS(ACCOUNT,1,1)) IN ("1" "2" "3" "4" "5") THEN TB_ACTIVITY=SUM(END_BALANCE,-BEGIN_BALANCE);
	ELSE TB_ACTIVITY=END_BALANCE;

	TB_ACTIVITY=COALESCE(TB_ACTIVITY,0);
	DIFFERENCE=SUM(AMOUNT,-TB_ACTIVITY);
	ABS_DIFF=ABS(DIFFERENCE);
	FORMAT AMOUNT DIFFERENCE 32.2;

	IF A AND B THEN FOUND_IN='BOTH';
	ELSE IF A AND NOT B THEN FOUND_IN='JE_ONLY';
	ELSE IF B AND NOT A THEN FOUND_IN='TB_ONLY';
	IF ROUND(ABS_DIFF,0.01) GT 1 THEN STATUS='OUT_OF_BALANCE';
	ELSE STATUS='IN_BALANCE';
RUN;

PROC SORT DATA=RECON_&ENTITY.; BY DESCENDING ABS_DIFF; RUN;

DATA UNREC_&ENTITY. REC_&ENTITY.;
SET RECON_&ENTITY.;
IF ABS_DIFF GT 1 THEN OUTPUT UNREC_&ENTITY.;
ELSE OUTPUT REC_&ENTITY.;
RUN;

DATA SASDATA.RECON_&ENTITY.(DROP=ABS_DIFF);
RETAIN COMPANY FOUND_IN STATUS ACCOUNT ACCT_DESCR JE_COUNT END_BALANCE BEGIN_BALANCE TB_ACTIVITY JE_ACTIVITY DEBIT_AMT CREDIT_AMT DIFFERENCE ;
SET RECON_&ENTITY.;
FORMAT DEBIT_AMT CREDIT_AMT JE_ACTIVITY DIFFERENCE 32.2;
RUN;

PROC EXPORT DATA=RECON_&ENTITY.
OUTFILE="&WIN_PATH.\OUTPUT\&CLIENT. RECONCILIATION REPORT.xls"
DBMS=EXCEL REPLACE;
SHEET="&ENTITY.";
RUN;

%MEND ENTITYWISE_RECON;

*CHART OF ACCOUNT PREPARATION - INCASE THE CLIENT COA IS NOT PROVIDED;

*EXTRACTING UNIQUE ACCOUNTS FROM GL AND TB DATA, AND ACCOUNT DESCRIPTIONS FROM TB DATA TO PREPARE COA;
DATA COA_PREP (KEEP=ACCOUNT ACCT_DESCR);
MERGE AIXDATA.JE_SUM AIXDATA.&CLIENT._TB;
BY ACCOUNT;
RUN;

* IMPORT PRIOR YEAR MAPPING INFORMATION;

PROC IMPORT OUT=PY_MAPPING_FORM
DATAFILE="&AIX_PATH.\sasprior\ABC5 Mapping Form.xls" /*Make sure the Prior Mapping form is copied onto the sasprior and re-named accrodingly*/
DBMS=EXCEL REPLACE;
SHEET="Account Map";
GETNAMES=NO;
RUN;

DATA PY_MAPPING_PREP(KEEP=ACCOUNT ACCOUNT_DESCRIPTION PY_SUBTYPE);
SET PY_MAPPING_FORM(FIRSTOBS=12);
LENGTH ACCOUNT $30. PY_SUBTYPE $9.;/*UPDATE/MODIFY THE LENGTH ACCORDINGLY*/
ACCOUNT=LEFT(TRIM(F1));
ACCOUNT_DESCRIPTION=COMPBL(F2);
PY_SUBTYPE=LEFT(TRIM(F8));
RUN;

PROC SORT DATA=PY_MAPPING_PREP;BY ACCOUNT;RUN;
PROC SORT DATA=COA_PREP;BY ACCOUNT;RUN;

*CREATING THE COA BY LOOKING UP THE SUBTYPE FROM THE PY MAPPING FORM;
DATA COA_MAPPED(KEEP=ACCOUNT ACCT_DESCRIPTION SUBTYPE SUGGESTED_FLAG) COA_TO_BE_MAPPED (KEEP=ACCOUNT ACCT_DESCRIPTION SUBTYPE SUGGESTED_FLAG);
LENGTH SUBTYPE $9. ACCT_DESCRIPTION $150. SUGGESTED_FLAG $10.;
MERGE COA_PREP(IN=A) PY_MAPPING_PREP(IN=B);
BY ACCOUNT;
ACCT_DESCRIPTION=COALESCEC(ACCT_DESCR,ACCOUNT_DESCRIPTION);
SUBTYPE=PY_SUBTYPE;

IF A AND B THEN DO;
	SUGGESTED_FLAG="";
	OUTPUT COA_MAPPED;
END;

ELSE IF A AND NOT B THEN DO;
	SUGGESTED_FLAG="Yes";
	OUTPUT COA_TO_BE_MAPPED;
END;
RUN;

DATA COA_ALL;
SET COA_MAPPED COA_TO_BE_MAPPED;
RUN;

*EXPORTING THE COA FILE TO MAP ANY UNMAPPED ACCOUNTS AND THEN READ THROUGH THE DATA REQUEST FORM FOR ABC PURPOSE;
PROC EXPORT DATA=COA_ALL
OUTFILE="&AIX_PATH.\RAWDATA\COA TO PREPARE.XLS"
DBMS=EXCEL REPLACE;
RUN;

/* END OF PROGRAM */
