DM LOG 'CLEAR' LOG;
OPTIONS MPRINT MLOGIC SYMBOLGEN LINESIZE=256 YEARCUTOFF=1976 NOCENTER NOLABEL;

/****************************************************************************
*   CREATED BY: 
*   CREATED ON: 
*   
*   PROGRAM DESCRIPTION:
*       PERFORMS PRELIMINARY DATA QUALITY CHECKS ON THE GL DATA
****************************************************************************/

*@@@ SET GLOBAL PARAMETERS @@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@;

%LET CLIENT = CLIENTNAME;
%LET WIN_PATH =G:\Client folder path;
%LET AIX_PATH = \\abc\abc\nc_reg\client abc folder path;

*@@@ CREATE PERMANENT SAS LIBRARIES @@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@;
LIBNAME AIXDATA "&AIX_PATH.\SASDATA";

*CONTROL TOTALS MACRO;

%MACRO DATA_SUMMARY(DATAIN,VAR1,VAR2,VAR3);	/* LIST OF VARIABLES CAN BE MODIFIED BASED ON NUMBER OF NUMERIC VARIABLES CONSIDERED FOR CONTROL TOTAL CHECKS - MAKE SURE LOCAL AMOUNT VARIABLES ARE ALSO INCLUDED IF AVAILABLE ON THE GL DATA; REST OF THE MACRO CODE TO BE MODIFIED ACCORDINGLY */			
		
	PROC SUMMARY DATA=&DATAIN.;					
		VAR &VAR1. &VAR2. &VAR3.;					
		OUTPUT OUT=SUMM SUM=&VAR1._SUM &VAR2._SUM &VAR3._SUM;					
	RUN;					
			
	DATA _NULL_;					
		SET SUMM;					
		FORMAT _FREQ_ COMMA20.;					
		FORMAT &VAR1._SUM &VAR2._SUM &VAR3._SUM COMMA21.2;					
		PUT @3 "----------------------------------------------------"/;					
		PUT @5 "CONTROL TOTAL AND TOTAL NUMBER OF RECORDS IN &DATAIN."/;					
		PUT @10 "TOTAL NUMBER OF RECORDS = " _FREQ_/;					
		PUT @10 "TOTAL OF &VAR1. = " &VAR1._SUM/;	
		PUT @10 "TOTAL OF &VAR2. = " &VAR2._SUM/;			
		PUT @10 "TOTAL OF &VAR3. = " &VAR3._SUM/;	
		PUT @3 '----------------------------------------------------'/;					
	RUN;					
			
%MEND DATA_SUMMARY;


*EXPORTING MACRO FOR EXPORTING RESULTS IN EXCEL;
%MACRO EXPORT(DATASET);
PROC EXPORT 
	DATA = &DATASET.
	OUTFILE = "&WIN_PATH.\OUTPUT\&CLIENT. DATA QUALITY REPORT.XLS"
	DBMS = EXCEL REPLACE;
	SHEET = "&DATASET.";
RUN;
%MEND EXPORT;


*PERIOD SUMMARY OF THE DATA;
PROC SQL;
CREATE TABLE sasdata.PERIOD_SUMMARY AS SELECT DISTINCT(PERIOD),
COUNT(*) AS TOTAL_COUNT FORMAT COMMA32.,
MIN(EFFECTIVE_DATE) AS MIN_EFFECTIVE_DATE FORMAT MMDDYY10.,
MAX(EFFECTIVE_DATE) AS MAX_EFFECTIVE_DATE FORMAT MMDDYY10.,
MIN(POSTED_DATE) AS MIN_POSTED_DATE FORMAT MMDDYY10.,
MAX(POSTED_DATE) AS MAX_POSTED_DATE FORMAT MMDDYY10.,
SUM(CREDIT_AMT) AS TOTAL_CREDIT,
SUM(DEBIT_AMT) AS TOTAL_DEBIT,
SUM(AMOUNT) AS TOTAL_AMOUNT
FROM AIXDATA.&CLIENT._RAWJE
GROUP BY PERIOD;
QUIT;

*SINGLE LINE ENTRIES/NOT NETTING ENTRIES;
PROC SUMMARY DATA = AIXDATA.&CLIENT._RAWJE NWAY MISSING;
	CLASS JRN_ENTRY;
	VAR AMOUNT DEBIT_AMT CREDIT_AMT;
	OUTPUT OUT = SUM_JRN_ENTRY (DROP=_TYPE_) SUM = ;
RUN;

DATA SINGLE_LINES_ALL (RENAME=_FREQ_=NO_LINES ) NOT_NET_ENTRY_ALL (RENAME=_FREQ_=NO_LINES);
SET SUM_JRN_ENTRY;
ABS_AMT=ABS(AMOUNT);
	IF _FREQ_ < 2 THEN OUTPUT SINGLE_LINES_ALL;
	IF ABS(AMOUNT) > .01 THEN OUTPUT NOT_NET_ENTRY_ALL;
RUN; 

PROC SORT DATA=SINGLE_LINES_ALL; BY DESCENDING DEBIT_AMT CREDIT_AMT ABS_AMT;

DATA SINGLE_LINE_EXCEL;
SET SINGLE_LINES_ALL(OBS=1000);
RUN;

PROC SORT DATA=ENTRIES_NOT_NETTING; BY DESCENDING DEBIT_AMT CREDIT_AMT ABS_AMT;

DATA ENTRIES_NOT_NETTING;
SET NOT_NET_ENTRY_ALL(OBS=1000);
RUN;

*JOURNAL ENTRIES IDENTIFIED WITH BOTH STANDARD AND NON-STANDARD ENTIES (WILL FAIL ABC);

PROC SUMMARY DATA = AIXDATA.&CLIENT._RAWJE NWAY MISSING;
	CLASS JRN_ENTRY MAN_SYS;
	VAR AMOUNT DEBIT_AMT CREDIT_AMT;
	OUTPUT OUT = SUM_JRN_ENTRY_MAN_SYS (DROP=_TYPE_) SUM = ;
RUN;

PROC SUMMARY DATA = SUM_JRN_ENTRY_MAN_SYS NWAY MISSING;
	CLASS JRN_ENTRY;
	VAR AMOUNT DEBIT_AMT CREDIT_AMT;
	OUTPUT OUT = SUM_JRN_ENTRY (DROP=_TYPE_) SUM = ;
RUN;

DATA MULTIPLE_MAN_SYS(RENAME=_FREQ_=NO_LINES);
SET SUM_JRN_ENTRY;
	IF _FREQ_ > 1 THEN OUTPUT;
RUN;

*JOURNAL ENTRIES CONTAINING ENTRIES FROM MORE THAN ONE PERIOD;

PROC SUMMARY DATA = AIXDATA.&CLIENT._RAWJE NWAY MISSING;
	CLASS JRN_ENTRY PERIOD;
	VAR AMOUNT DEBIT_AMT CREDIT_AMT;
	OUTPUT OUT = SUM_JRN_ENTRY_PERIOD (DROP=_TYPE_) SUM = ;
RUN;

PROC SUMMARY DATA = SUM_JRN_ENTRY_PERIOD NWAY MISSING;
	CLASS JRN_ENTRY;
	VAR AMOUNT DEBIT_AMT CREDIT_AMT;
	OUTPUT OUT = SUM_JRN_ENTRY (DROP=_TYPE_) SUM = ;
RUN;

DATA MULTIPLE_PERIOD(RENAME=_FREQ_=NO_LINES);
SET SUM_JRN_ENTRY;
	IF _FREQ_ > 1 THEN OUTPUT;
RUN;

%EXPORT(PERIOD_SUMMARY);
%EXPORT(SINGLE_LINE_EXCEL);
%EXPORT(ENTRIES_NOT_NETTING);
%EXPORT(MULTIPLE_MAN_SYS);
%EXPORT(MULTIPLE_PERIOD);

/* END OF PROGRAM */
